<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="spring.model.mapper.itemMapper">

	<select id="color" parameterType="Map" resultType="String">
		select
		distinct(itemColor)
		from item i, itemOption o
		where i.itemNo = o.itemNo
		and i.itemNo =#{itemNo}
	</select>

	<select id="size" parameterType="Map" resultType="String">
		select itemSize
		from item i, itemOption o
		where i.itemNo = o.itemOptionNo and i.itemNo
		=#{itemNo} and o.itemColor = #{color}
	</select>

	<select id="count" parameterType="Map" resultType="int">
		select o.count
		from item i, itemOption o
		where i.itemNo = o.itemOptionNo and i.itemNo
		=#{itemNo} and o.itemColor = #{color} and o.itemSize = #{itemSize}
	</select>


	<select id="subtype" parameterType="Map" resultType="String">
		select
		distinct(subType)
		from itemType t, item i
		where t.parentType = i.type
		and t.parentType=#{parentType}
	</select>



	<select id="total" parameterType="Map" resultType="int">
		select count(*) from item
		<where>
			type = #{type}
			<choose>
				<when test="col=='content'">
					and content like '%'||#{word}||'%'
				</when>
				<when test="col=='title'">
					and title like '%'||#{word}||'%'
				</when>
				<when test="col=='id'">
					and id like '%'||#{word}||'%'
				</when>
			</choose>
		</where>
	</select>

	<delete id="delete" parameterType="int">
		delete from itemOption
		where
		itemNo = #{itemNo}
	</delete>

	<update id="update" parameterType="int">
		update itemOption
		<set>
			count = #{count}
		</set>
		where itemOptionNo = #{itemOptionNo}
	</update>



	<resultMap type="ItemDTO" id="itemMap">
		<result property="itemNo" column="itemNo" />
		<result property="title" column="title" />
		<result property="description" column="description" />
		<result property="content" column="content" />
		<result property="price" column="price" />
		<result property="salePrice" column="salePrice" />
		<result property="type" column="type" />
		<result property="image" column="image" />
		<collection property="itemOptionList" column="itemNo"
			javaType="List" ofType="ItemOptionDTO" resultMap="itemOptionDTOListMap" />
	</resultMap>
	<resultMap type="itemOptionDTO" id="itemOptionDTOListMap">
		<result property="itemNo" column="itemNo" />
		<result property="itemOptionNo" column="itemOptionNo" />
		<result property="itemCount" column="itemCount" />
		<result property="itemSize" column="itemSize" />
		<result property="itemColor" column="itemColor" />
	</resultMap>
	<select id="list" parameterType="Map" resultMap="itemMap">
		select itemNo, image, title, description, content, price,salePrice,	type,itemOptionNo,itemColor,itemSize,itemCount
		from(
		select i.itemNo, image, title, description, content, price,salePrice, type, rownum rnum,itemOptionNo,itemColor,itemSize,itemCount
		from item i , itemOption o
		where type = #{type} and i.itemNo = o.itemNo)
	<![CDATA[ where rnum>=#{sno} and rnum<=#{eno}]]>
	</select>
		<select id="read" parameterType="int" resultMap="itemMap">
		select i.itemNo, image, title, description, content, price,salePrice, type,itemOptionNo,itemColor,itemSize,itemCount
		from item i , itemOption o
		where i.itemNo = #{itemNo}
	</select>
</mapper>


