<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="spring.model.mapper.AdminMapper">
	<select id="cstotal" parameterType="String" resultType="int">
       select count(ref)
        from(
           select ref, count(ref)
          from board
           where type='기타' and lev='A' and category=#{category}
           group by ref
           <![CDATA[
            having count(ref)<2
            ]]>
              )
   </select>
	<select id="total" parameterType="String" resultType="int">
		select count(state) 
		from norder  where
		<choose>
			<when test= '_parameter.equals("신규주문")'>
			<![CDATA[
			state = '배송준비' 
			and to_char(odate,'yy/MM/dd') > to_char(sysdate-4,'yy/MM/dd')
			]]>
			</when>
			<otherwise>
			state = #{state}
			</otherwise>
		</choose>
	</select>
	
	<select id="totalP" parameterType="map" resultType="int">
		select count(*) from 
			(
			select a.id, a.orderno, i.title, b.orderitemno, a.odate 
			from norder a, orderitem b, itemoption o, item i
			where a.orderno = b.orderno and b.itemOptionNo = o.itemOptionNo and i.itemNo = o.itemNo 
			<choose>
				<when test= 'state.equals("신규주문")'>
				<![CDATA[
				and a.state = '배송준비' 
				and to_char(a.odate,'yy/MM/dd') > to_char(sysdate-4,'yy/MM/dd')
				]]>
				</when>
				<otherwise>
				and a.state = #{state}
				</otherwise>
			</choose>
			)
		<where>
			<choose>
				<when test="col == 'onum'">
					orderno like '%'||#{word}||'%'
				</when>
				<when test="col == 'otitle'">
					title like '%'||#{word}||'%'
				</when>
				<when test="col == 'buyer'">
					id like '%'||#{word}||'%'
				</when>
				<when test="col == 'odate'">
					to_char(odate,'yyyy-MM-dd') like '%'||#{word}||'%'
				</when>
			</choose>
		</where>
	</select>
	<select id="moneyP" parameterType="map" resultType="int">
		select count(*) from (
		select a.orderno orderno, a.odate odate, decode(a.pdate,null,'입금대기',a.pdate) pdate, 
				a.id id, a.state state, (b.price - a.saleprice) totalprice, rownum r 
			from norder a,
		    (select a.orderno, sum(b.itemprice * b.count) price from norder a, orderitem b 
		    where a.orderno = b.orderno 
		    <choose>
				<when test= "datec == 'today'">
					and to_char(a.pdate, 'yyyy/mm/dd') = to_char(sysdate, 'yyyy/mm/dd')
				</when>
				<when test= "datec == 'delay'">
					and a.state = '입금대기'
				</when>					
			</choose>
		    <choose>
				<when test="col == 'onum'">
					and a.orderno like '%'||#{word}||'%'
				</when>
				<when test="col == 'otitle'">
					and i.title like '%'||#{word}||'%'
				</when>
				<when test="col == 'buyer'">
					and a.id like '%'||#{word}||'%'
				</when>
				<when test="col == 'odate'">
					and to_char(a.odate,'yyyy-MM-dd') like '%'||#{word}||'%'
				</when>
			</choose>
		    group by a.orderno) b
		where a.orderno = b.orderno
		)
	</select>
	<select id="priceTotal" parameterType="String" resultType="int">
		select nvl(sum(b.price - a.saleprice),0) from norder a,
			(select a.orderno, sum(b.itemprice * b.count) price 
				from norder a, orderitem b where a.orderno = b.orderno and 
				<choose>
					<when test= '_parameter.equals("t")'>
						to_char(a.pdate, 'yyyy/mm/dd') = to_char(sysdate, 'yyyy/mm/dd')
					</when>
					<when test= '_parameter.equals("d")'>
						a.state = '입금대기'
					</when>					
				</choose>
				group by a.orderno) b
		where a.orderno = b.orderno
	</select>

	<resultMap type="orderDTO" id="orderMap">
		<result property="id" column="id"/>
		<result property="orderNo" column="orderno"/>
		<result property="odate" column="odate"/>
		<result property="pdate" column="pdate"/>
		<collection property="orderItemList" column="orderno"
			javaType="List" ofType="OrderItemDTO" resultMap="orderItemDTOListMap" />
	</resultMap>
	<resultMap type="OrderItemDTO" id="orderItemDTOListMap">
		<result property="count" column="count"/>
		<result property="state" column="state"/>	
		<result property="itemNo" column="itemno"/>	
		<result property="itemPrice" column="itemPrice"/>	
		<result property="itemImage" column="itemImage"/>	
		<result property="itemTitle" column="itemTitle"/>	
		<result property="itemSize" column="itemSize"/>	
		<result property="itemColor" column="itemColor"/>	
		<result property="orderItemNo" column="orderItemNo"/>
		<result property="deliveryNo" column="deliveryNo"/>		
	</resultMap>
	
	<select id="list" parameterType="map" resultMap="orderMap">
		select * from
		(select orderno, id, odate, orderItemNo, count, state, itemPrice, itemTitle, itemSize, itemColor, itemImage, itemno, rownum r, deliveryNo 
			 from
		(select b.orderItemNo orderItemNo, a.orderno orderno, a.id id, to_char(a.odate, 'yyyy-MM-dd') odate, 
			b.count count,  b.state state, b.itemPrice itemPrice, i.title itemTitle, o.itemSize itemSize, 
			o.itemColor itemColor, i.image itemImage, i.itemno itemno, b.deliveryNo deliveryNo
			from norder a, orderitem b ,item i, itemOption o
			where a.orderno = b.orderno and b.itemOptionNo = o.itemOptionNo and i.itemNo = o.itemNo 		
				<choose>
					<when test="col == 'onum'">
						and a.orderno like '%'||#{word}||'%'
					</when>
					<when test="col == 'otitle'">
						and i.title like '%'||#{word}||'%'
					</when>
					<when test="col == 'buyer'">
						and a.id like '%'||#{word}||'%'
					</when>
					<when test="col == 'odate'">
						and to_char(a.odate,'yyyy-MM-dd') like '%'||#{word}||'%'
					</when>
				</choose>
				<choose>
					<when test= 'state.equals("신규주문")'>
					<![CDATA[
					and a.state = '배송준비' 
					and to_char(a.odate,'yy/MM/dd') > to_char(sysdate-4,'yy/MM/dd')
					]]>
					</when>
					<otherwise>
					and a.state = #{state}
					</otherwise>
				</choose>
			order by a.orderno desc
			))
		<![CDATA[
		where r >=#{sno} and r<=#{eno}
		]]>
	</select>
	<select id="moneyl" parameterType="map" resultType="orderDTO">
		select * from (
		select a.orderno orderno, a.odate odate, decode(a.pdate,null,'입금대기',a.pdate) pdate, 
				a.id id, a.state state, (b.price - a.saleprice) totalprice, rownum r 
			from norder a,
		    (select a.orderno, sum(b.itemprice * b.count) price from norder a, orderitem b 
		    where a.orderno = b.orderno 
		    <choose>
				<when test= "datec == 'today'">
					and to_char(a.pdate, 'yyyy/mm/dd') = to_char(sysdate, 'yyyy/mm/dd')
				</when>
				<when test= "datec == 'delay'">
					and a.state = '입금대기'
				</when>					
			</choose>
		    <choose>
				<when test="col == 'onum'">
					and a.orderno like '%'||#{word}||'%'
				</when>
				<when test="col == 'otitle'">
					and i.title like '%'||#{word}||'%'
				</when>
				<when test="col == 'buyer'">
					and a.id like '%'||#{word}||'%'
				</when>
				<when test="col == 'odate'">
					and to_char(a.odate,'yyyy-MM-dd') like '%'||#{word}||'%'
				</when>
			</choose>
		    group by a.orderno) b
		where a.orderno = b.orderno
		)
		<![CDATA[
		where r >=#{sno} and r<=#{eno}
		]]>
	</select>
	
	<update id="updateState" parameterType="Map">
		update norder
		set state = #{state}
		<if test="state == '배송준비'">
		,pdate = sysdate
		</if>
		where orderno = #{orderno}
	</update>
	
	<update id="updateStateP" parameterType="Map">
		update orderitem
		set state = #{state},
		deliveryno = #{deliveryno, jdbcType=VARCHAR}
		where orderno = #{orderno}
	</update>
	
	
	<select id="read" parameterType="String" resultType="MemberDTO">
		select * from member
		where id = #{id}
	</select>
	
	<resultMap type="orderDTO" id="orderReadMap">
		
		<result property="postcode" column="postcode"/>
		<result property="address" column="address"/>
		<result property="detailaddress" column="detailaddress"/>
		<result property="rmsg" column="rmsg"/>
		<result property="rphone" column="rphone"/>
		<result property="state" column="state"/>
		<result property="name" column="name"/>
		<result property="rname" column="rname"/>
		<result property="orderNo" column="orderNo"/>
		<result property="odate" column="odate"/>
		<result property="totalPrice" column="totalprice"/>
		<result property="salePrice" column="saleprice"/>
		<result property="paymentType" column="paymenttype"/>
		<collection property="orderItemList" column="orderno"
			javaType="List" ofType="OrderItemDTO" resultMap="orderItemDTOListReadMap" />
	</resultMap>
	<resultMap type="OrderItemDTO" id="orderItemDTOListReadMap">	
		<result property="deliveryNo" column="deliveryNo"/>	
		<result property="itemPrice" column="itemprice"/>	
		<result property="orderItemNo" column="orderItemNo"/>	
	</resultMap>
	<select id="readP" parameterType="map" resultMap="orderReadMap">
	select distinct(orderno), odate, name, totalprice, saleprice, paymenttype, state, rname,
	postcode, address, detailaddress, rphone, rmsg, deliveryNo	
	
	from(
		select b.orderitemno orderItemNo, a.orderno orderNo, a.odate odate, c.name name, a.rname rname, b.deliveryNo deliveryNo,
			a.postcode postcode, a.address address, a.detailaddress detailaddress, a.rphone rphone, a.rmsg rmsg,
			b.itemprice itemprice, a.saleprice saleprice, a.paymenttype paymenttype, a.state state, 
			(select sum(itemprice * count) from orderitem where orderno = #{orderno}) totalprice
		from norder a, orderitem b, member c 
		where a.id = c.id and a.orderno = b.orderno and a.orderno = #{orderno})
	</select>
	
	<select id="readPList" parameterType="String" resultType="OrderItemDTO">
		select b.orderitemno orderItemNo, d.image itemImage, d.title itemTitle, d.itemno itemNo, b.deliveryno deliveryNo,
			c.itemcolor itemColor, c.itemsize itemSize, b.count count, b.itemprice itemPrice, b.state state
        from norder a, orderitem b, itemoption c, item d
        where a.orderno = b.orderno and b.itemoptionno = c.itemoptionno 
        and c.itemno = d.itemno and a.orderno = #{orderno}
	</select>
	
	<select id="orderCount" parameterType="String" resultType="OrderItemDTO">
		select i.state, count(*) as count
		from
		norder o, orderitem i
		where id = #{id} and o.orderno=i.orderno
		group by i.state
		order by i.state
	</select>

	<select id="chartl" resultType="OrderDTO">
		select nvl(id,0) id, nvl(orderno,0) orderNo, b.datec odate from
		    (select count(distinct(id)) id, count(orderno) orderno, to_char(odate, 'yy/mm/dd') odate 
		    	from norder group by to_char(odate, 'yy/mm/dd')) a right outer join
		    (SELECT
		        TO_CHAR(TO_DATE(sysdate-9, 'yy.mm.dd') + LEVEL - 1, 'yy/mm/dd') datec
		    FROM dual
		    CONNECT BY
		    <![CDATA[
		        TO_DATE(sysdate-9, 'yy/mm/dd') + LEVEL - 1 <= TO_char(sysdate, 'yy/mm/dd')) b
			]]>
		on a.odate = b.datec
		order by datec asc
	</select>
	<select id="chartlp" resultType="OrderDTO">
		select nvl(price,0) totalPrice, b.datec odate from
		    (select sum(b.price - a.saleprice) price, to_char(a.odate, 'yy/mm/dd') odate 
		    	from norder a, 
		    	(select a.orderno, sum(b.itemprice * b.count) price  
		    	from norder a, orderitem b where a.orderno = b.orderno group by a.orderno) b
		    where a.orderno = b.orderno
		    group by to_char(a.odate, 'yy/mm/dd')) a right outer join
		    (SELECT
		        TO_CHAR(TO_DATE(sysdate-9, 'yy.mm.dd') + LEVEL - 1, 'yy/mm/dd') datec
		    FROM dual
		    CONNECT BY
		    <![CDATA[
		        TO_DATE(sysdate-9, 'yy/mm/dd') + LEVEL - 1 <= TO_char(sysdate, 'yy/mm/dd')) b
		    ]]>
		on a.odate = b.datec
		order by datec asc
	</select>
		
	<select id="noticel" parameterType="int" resultType="NoticeDTO">
		select no, subject,lev, wdate from (
		select no, subject, lev, to_char(wdate, 'mm.dd.') wdate from notice order by no desc)
		<![CDATA[
		where lev = 'A' and rownum <=#{rownum}
		]]>
	</select>

	<select id="deliveryl" parameterType="int" resultType="BoardDTO">
		select board_no, subject, wdate from (
		select board_no, subject, to_char(wdate, 'mm.dd.') wdate, lev, type from board where indent = 0 order by board_no desc)
		<![CDATA[
		where rownum <=#{rownum} and type='기타'
		]]>
		and LEV = 'A'
	</select>

	<select id="communityl" parameterType="int" resultType="BoardDTO">
		select board_no, content, wdate, subject, LEV from (
		select board_no, content, to_char(wdate, 'mm.dd.') wdate, type, subject, LEV from board order by board_no desc)
		<![CDATA[
		where rownum <=#{rownum} and type='상품'
		]]>
		and LEV = 'A'
	</select>
	<resultMap type="ItemDTO" id="ItemlistMap">		
		<result property="itemNo" column="itemNo"/>
		<result property="image" column="image"/>
		<result property="title" column="title"/>
		<result property="price" column="price"/>
		<result property="type" column="type"/>
		<collection property="itemOptionList" column="itemno"
			javaType="List" ofType="ItemOptionDTO" resultMap="ItemOptionDTOMap" />
	</resultMap>
	<resultMap type="ItemOptionDTO" id="ItemOptionDTOMap">	
		<result property="itemCount" column="itemCount"/>	
		<result property="itemSize" column="itemSize"/>	
		<result property="itemColor" column="itemColor"/>	

	</resultMap>
	<select id="iteml" parameterType="map" resultMap="ItemlistMap">
		select * from
		(select itemNo, image, title, price, type, itemCount, itemSize, itemColor, rownum r 
		from (select a.itemno itemNo, a.image image, a.title title, a.price price, a.type type, b. itemcount itemCount, 
		b.itemsize itemSize, b.itemcolor itemColor 
		from item a, itemoption b where a.itemno = b.itemno
		<choose>
			<when test="col == 'onum'">
				and a.itemno like '%'||#{word}||'%'
			</when>
			<when test="col == 'otitle'">
				and a.title like '%'||#{word}||'%'
			</when>
			<when test="col == 'type'">
				and a.type like '%'||#{word}||'%'
			</when>
		</choose>
		))
		<![CDATA[
		where r >=#{sno} and r <=#{eno}
		]]>
	</select>
	<select id="itemC" parameterType="Map" resultType="int">
		select count(a.itemno) from item a, itemoption b where a.itemno = b.itemno
			<choose>
				<when test="col == 'onum'">
					and a.itemno like '%'||#{word}||'%'
				</when>
				<when test="col == 'otitle'">
					and a.title like '%'||#{word}||'%'
				</when>
				<when test="col == 'type'">
					and a.type like '%'||#{word}||'%'
				</when>
			</choose>
	</select>
</mapper>