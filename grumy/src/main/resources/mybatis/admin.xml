<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="spring.model.mapper.AdminMapper">
	<select id="total" parameterType="String" resultType="int">
		select count(b.state) 
		from norder a, orderItem b 
		where a.orderno = b.orderno  
		<choose>
			<when test= '_parameter.equals("신규주문")'>
			<![CDATA[
			and b.state = '배송준비' 
			and to_char(odate,'yyyyMMdd') >= to_char(sysdate-3,'yyyyMMdd')
			]]>
			</when>
			<otherwise>
			and b.state = #{state}
			</otherwise>
		</choose>
	</select>
	<select id="totalP" parameterType="map" resultType="int">
		select count(*) from 
			(
			select a.id, a.orderno, i.title, b.orderitemno, a.odate 
			from norder a, orderitem b, itemoption o, item i
			where a.orderno = b.orderno and b.itemOptionNo = o.itemOptionNo and i.itemNo = o.itemNo and b.state = #{state}
			)
		<where>
			<choose>
				<when test="col == 'onum'">
					and orderno like '%'||#{word}||'%'
				</when>
				<when test="col == 'otitle'">
					and title like '%'||#{word}||'%'
				</when>
				<when test="col == 'buyer'">
					and id like '%'||#{word}||'%'
				</when>
				<when test="col == 'odate'">
					and to_char(odate,'yyyy-MM-dd') like '%'||#{word}||'%'
				</when>
			</choose>
		</where>
	</select>
	
	<resultMap type="orderDTO" id="orderMap">
		<result property="id" column="id"/>
		<result property="orderNo" column="orderno"/>
		<result property="odate" column="odate"/>
		<collection property="orderItemList" column="orderno"
			javaType="List" ofType="OrderItemDTO" resultMap="orderItemDTOListMap" />
	</resultMap>
	<resultMap type="OrderItemDTO" id="orderItemDTOListMap">
		<result property="itemCount" column="itemcount"/>
		<result property="state" column="state"/>	
		<result property="itemPrice" column="itemPrice"/>	
		<result property="itemTitle" column="itemTitle"/>	
		<result property="itemSize" column="itemSize"/>	
		<result property="itemColor" column="itemColor"/>	
		<result property="orderItemNo" column="orderItemNo"/>	
	</resultMap>
	
	<select id="list" parameterType="map" resultMap="orderMap">
		select * from
		(select orderno, id, odate, orderItemNo, itemcount, state, itemPrice, itemTitle, itemSize, itemColor, rownum r from
		(select b.orderItemNo orderItemNo, a.orderno orderno, a.id id, to_char(a.odate, 'yyyy-MM-dd') odate, b.itemcount itemcount,  b.state state, 
			(i.Price -i.SalePrice) itemPrice, i.title itemTitle, o.itemSize itemSize, o.itemColor itemColor
			from norder a, orderitem b ,item i, itemOption o
			where a.orderno = b.orderno and b.itemOptionNo = o.itemOptionNo and i.itemNo = o.itemNo 
			
				<choose>
					<when test="col == 'onum'">
						and a.orderno like '%'||#{word}||'%'
					</when>
					<when test="col == 'otitle'">
						and i.title like '%'||#{word}||'%'
					</when>
					<when test="col == 'buyer'">
						and a.id like '%'||#{word}||'%'
					</when>
					<when test="col == 'odate'">
						and to_char(a.odate,'yyyy-MM-dd') like '%'||#{word}||'%'
					</when>
				</choose>
				<choose>
					<when test= 'state.equals("신규주문")'>
					<![CDATA[
					and b.state = '배송준비' 
					and to_char(a.odate,'yyyyMMdd') >= to_char(sysdate-3,'yyyyMMdd')
					]]>
					</when>
					<otherwise>
					and b.state = #{state}
					</otherwise>
				</choose>
			order by a.orderno desc
			))
		<![CDATA[
		where r >=#{sno} and r<=#{eno}
		]]>
	</select>
	
	<select id="noticel" parameterType="int" resultType="NoticeDTO">
		select no, subject,lev, wdate from (
		select no, subject, lev, to_char(wdate, 'mm.dd.') wdate from notice order by no desc)
		<![CDATA[
		where lev = 'A' and rownum <=#{rownum}
		]]>
	</select>

	<select id="deliveryl" parameterType="int" resultType="DeliveryDTO">
		select no, subject, wdate from (
		select no, subject, to_char(wdate, 'mm.dd.') wdate, lev from delivery where indent = 0 order by no desc)
		<![CDATA[
		where rownum <=#{rownum} 
		]]>
		and LEV = 'A'
	</select>

	<select id="communityl" parameterType="int" resultType="communityDTO">
		select communityno, content, wdate from (
		select communityno, content, to_char(wdate, 'mm.dd.') wdate from community order by communityno desc)
		<![CDATA[
		where rownum <=#{rownum}
		]]>
	</select>
	
	<update id="updateState" parameterType="Map">
		update orderitem
		set state = #{state}
		where orderno = #{orderno}
	</update>
	
</mapper>